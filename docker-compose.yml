services:
  # Main AI Form Assistant API
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      minio:
        condition: service_healthy
    restart: unless-stopped

# Frontend Web Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://app:8000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - app
    restart: unless-stopped  

  redis:
    image: redis:7.2-alpine
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  create-buckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set local http://minio:9000 $$S3_ACCESS_KEY $$S3_SECRET_KEY;
      /usr/bin/mc mb local/$$S3_BUCKET_NAME || true;
      /usr/bin/mc policy set public local/$$S3_BUCKET_NAME;
      exit 0;
      "

  whatsapp-test-server:
    build:
      context: ./whatsapp-test-server
      dockerfile: Dockerfile
    volumes:
      - whatsapp_session:/usr/src/app/session_data
    depends_on:
      - app
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  redis_data:
  minio_data:
  whatsapp_session: